{"version":3,"sources":["components/ChatInput.js","components/ChatMessage.js","firebase.js","components/Chat.js","components/Login.js","components/Header.js","data/SideBarData.js","components/SideBar.js","App.js","index.js"],"names":["ChatInput","props","useState","input","setInput","Container","InputContainer","onChange","e","target","value","type","placeholder","SendButton","onClick","preventDefault","sendMessage","styled","div","button","Send","SendIcon","ChatMessage","UserAvatar","src","image","MessageContent","Name","name","timeStamp","toDate","toUTCString","Text","text","span","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Chat","channelId","useParams","channel","setChannel","messages","setMessages","useEffect","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","console","log","Header","Channel","ChannelName","ChannelInfo","ChannelDetails","Info","MessageContainer","length","index","user","userImage","payload","photo","Timestamp","now","add","InfoOutlinedIcon","Login","Content","SlackImg","SignInButton","signInWithPopup","then","result","newUser","displayName","photoURL","localStorage","setItem","JSON","stringify","setUser","catch","error","alert","message","img","background","Main","SearchContainer","Search","UserContainer","UserImage","CheckBoxWrapper","CheckBoxLabel","label","CheckBox","signOut","darkMode","headerTheme","setHeaderTheme","id","title","htmlFor","sidebarItemsData","icon","SideBar","theme","sideBarTheme","history","useHistory","WorkSpaceContainer","NewMessage","MainChannels","item","MainChannelItem","ChannelsContainer","NewChannelContainer","promptName","prompt","ChannelsList","rooms","push","App","setRooms","parse","getItem","setSideBarTheme","className","removeItem","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05fccde9.chunk.js","sourcesContent":["import React , {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nfunction ChatInput(props){\r\n\r\n    const [input , setInput] = useState(\"\");\r\n\r\n    const send =(e) => {\r\n        e.preventDefault();\r\n        if(!input) return ;\r\n        props.sendMessage(input);\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <InputContainer>\r\n            <form>\r\n                <input onChange = {(e) => (setInput(e.target.value))} value = {input}type = \"text\" placeholder = \"Message here\" />\r\n                <SendButton onClick = {send} type = \"submit\">\r\n                    <Send />\r\n                </SendButton>\r\n            </form>\r\n            </InputContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChatInput ;\r\n\r\nconst Container = styled.div`\r\npadding-left : 20px;\r\npadding-right : 20px ;\r\npadding-bottom : 24px ;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\nborder : 1px solid #8D8D8E;\r\nborder-radius : 4px ;\r\nform {\r\n    display : flex ;\r\n    align-items : center ;\r\n    height : 42px;\r\n    padding-left : 10px ;\r\n    input {\r\n        flex : 1 ;\r\n        border : none ;\r\n        font-size : 13px;\r\n    }\r\n    input:focus {\r\n        outline : none ;\r\n    }\r\n}\r\n`;\r\n\r\n\r\nconst SendButton = styled.button`\r\n    background : #007a5a ;\r\n    border-radius : 2px ;\r\n    width : 32px ;\r\n    height : 32px ;\r\n    display : flex ;\r\n    align-items : center ;\r\n    justify-content : center ;\r\n    margin-right : 5px ;\r\n    cursor : pointer ;\r\n    border : none ;\r\n\r\n    .MuiSvgIcon-root {\r\n        width : 18px ;\r\n    }\r\n\r\n    :hover {\r\n        background-color : #148657;\r\n    }\r\n`;\r\n\r\nconst Send = styled(SendIcon)`\r\n    color : #D9D9D9;\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction ChatMessage(props) {\r\n    return (\r\n        <Container>\r\n            <UserAvatar>\r\n                <img src = {props.image}/>\r\n            </UserAvatar>\r\n            <MessageContent>\r\n                <Name>\r\n                    {props.name} <span> {props.timeStamp.toDate().toUTCString()} </span>\r\n                </Name>\r\n                <Text>\r\n                    {props.text}\r\n                </Text>\r\n            </MessageContent>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChatMessage ;\r\n\r\nconst Container = styled.div`\r\n    padding : 8px 20px ;\r\n    display : flex;\r\n    align-items : center;\r\n\r\n    :hover {\r\n        background-color : #E5E5E5 ;\r\n    }\r\n`;\r\n\r\nconst UserAvatar = styled.div`\r\n    width : 36px ;\r\n    height : 36px;\r\n    border-radius : 2px ;\r\n    overflow : hidden ;\r\n    img {\r\n        width : 100% ;\r\n    }\r\n    margin-right : 8px ;\r\n`;\r\n\r\nconst MessageContent = styled.div`\r\ndisplay : flex ;\r\nflex-direction : column ;\r\n`;\r\n\r\nconst Name = styled.span`\r\n    font-weight : 900 ;\r\n    font-size : 15px ;\r\n    line-height : 1.4;\r\n    span {\r\n        font-weight : 400 ;\r\n        color : rgb(97,96,97);\r\n        margin-left : 8px ;\r\n        font-size : 13px ;\r\n    }\r\n` ;\r\n\r\n\r\nconst Text = styled.span``;","import firebase from 'firebase'\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDr7e_nQ7F0WtGWFEOLQ7Ht7wmfE77RYUI\",\r\n  authDomain: \"slack-clone-73c2d.firebaseapp.com\",\r\n  projectId: \"slack-clone-73c2d\",\r\n  storageBucket: \"slack-clone-73c2d.appspot.com\",\r\n  messagingSenderId: \"370270048394\",\r\n  appId: \"1:370270048394:web:b533c8355bfbdc3a049d73\",\r\n  measurementId: \"G-V3QHT1D419\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore() ;\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider() ;\r\n\r\nexport default db ;\r\n\r\nexport {auth,provider};","import React , {useEffect , useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport ChatInput from './ChatInput';\r\nimport ChatMessage from './ChatMessage';\r\nimport db from '../firebase'\r\nimport {useParams} from \"react-router-dom\";\r\nimport firebase from 'firebase'\r\n\r\nfunction Chat(props) {\r\n\r\n  let {channelId} = useParams();\r\n  const [ channel , setChannel ] = useState();\r\n  const [messages , setMessages] = useState([]);\r\n\r\n  const getChannel = () => {\r\n    db.collection('rooms').doc(channelId).onSnapshot((snapshot) => {\r\n      setChannel(snapshot.data());\r\n    })\r\n  }\r\n\r\n  const getMessages = () => {\r\n    db.collection('rooms').doc(channelId).collection('messages').orderBy('timeStamp','asc').onSnapshot((snapshot) => {\r\n      let messages = snapshot.docs.map((doc) => doc.data());\r\n      console.log(messages);\r\n      setMessages(messages);\r\n    })\r\n  }\r\n\r\n  const sendMessage = (text) => {\r\n    if(channelId){\r\n      let payload = {\r\n        text : text ,\r\n        user : props.user.name ,\r\n        userImage : props.user.photo ,\r\n        timeStamp : firebase.firestore.Timestamp.now()\r\n      }\r\n      db.collection('rooms').doc(channelId).collection('messages').add(payload);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n      getChannel();\r\n      getMessages();\r\n      },[channelId]);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Channel>\r\n          <ChannelName>\r\n            # {channel && channel.name}\r\n          </ChannelName>\r\n          <ChannelInfo>\r\n          Company wide announcements\r\n          </ChannelInfo>\r\n        </Channel>\r\n        <ChannelDetails>\r\n          <div>\r\n            Details\r\n          </div>\r\n          <Info />\r\n        </ChannelDetails>\r\n      </Header>\r\n      <MessageContainer>\r\n        {\r\n          messages.length > 0 &&\r\n          messages.map((data,index) => (\r\n              <ChatMessage \r\n              text = {data.text}\r\n              name = {data.user}\r\n              image = {data.userImage}\r\n              timeStamp = {data.timeStamp}\r\n              />\r\n          ))\r\n        }\r\n      </MessageContainer>\r\n      <ChatInput sendMessage = {sendMessage}/>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst Container = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 64px auto min-content;\r\n    min-height: 0;\r\n`;\r\n\r\nconst Header = styled.div`\r\npadding-left : 20px ;\r\npadding-right : 20px ;\r\ndisplay : flex ;\r\nalign-items : center ;\r\nborder-bottom : 1px solid rgba(83,39,83,.13) ;\r\njustify-content : space-between;\r\n`;\r\n\r\nconst MessageContainer = styled.div`\r\n  display : flex ;\r\n  flex-direction : column ;\r\n  overflow-y : scroll ;\r\n`;\r\n\r\n\r\n\r\nconst ChannelDetails = styled.div`\r\ndisplay : flex ;\r\nalign-items : center ;\r\ncolor : #606060 ;\r\n`;\r\n\r\nconst ChannelName = styled.div`\r\nfont-weight : 700`;\r\n\r\nconst Channel= styled.div``;\r\n\r\nconst ChannelInfo = styled.div`\r\nfont-weight : 400 ;\r\ncolor : #606060 ;\r\nfont-size : 13px ;\r\nmargin-top : 8px ;\r\n`;\r\n\r\nconst Info = styled(InfoOutlinedIcon)`\r\n  margin-left : 10px ;\r\n`; \r\n\r\n","import React from 'react' ;\r\nimport styled from 'styled-components';\r\nimport {auth,provider} from '../firebase';\r\n\r\nfunction Login(props){\r\n\r\n  const signIn = () => {\r\n    auth.signInWithPopup(provider)\r\n    .then((result)=> {\r\n      const newUser = {\r\n        name : result.user.displayName ,\r\n        photo : result.user.photoURL \r\n      }\r\n      localStorage.setItem('user',JSON.stringify(newUser));\r\n      props.setUser(newUser);\r\n    })\r\n    .catch((error) => {\r\n      alert(error.message)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <SlackImg src = \"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\"/>\r\n        <h1> Sign in Slack </h1>\r\n        <SignInButton onClick= {()=>signIn()}>\r\n          Sign In With Google\r\n        </SignInButton>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Login ;\r\n\r\nconst Container = styled.div`\r\n  width : 100% ;\r\n  height : 100vh ;\r\n  background-color : #f8f8f8;\r\n  display : flex ;\r\n  justify-content : center ;\r\n  align-items : center ;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  background : white ;\r\n  padding : 100px ;\r\n  border-radius : 5px ;\r\n  box-shadow : 0 1px 3px rgb(0 0 0 / 12%) , 0 1px 2px rgb(0 0 0 / 24%) ;\r\n  display : flex ;\r\n  flex-direction : column ;\r\n  justify-content : center ; \r\n  align-items : center ;\r\n  font-family : system-ui ;\r\n` ;\r\n\r\nconst SlackImg = styled.img`\r\n  height : 100px ;\r\n`;\r\n\r\nconst SignInButton = styled.button`\r\n  margin-top : 50px ;\r\n  background-color : #0a8d48;\r\n  color : white ;\r\n  border : none ; \r\n  height : 40px ;\r\n  border-radius : 4px ;\r\n  cursor : pointer ;\r\n  font-size : 15px; \r\n`;\r\n\r\n","import React , {useState} from \"react\";\r\nimport styled , {Themeprovider} from \"styled-components\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\n\r\n\r\nfunction Header ({user ,signOut , darkMode}) {\r\n\r\n  const [headerTheme , setHeaderTheme] = useState(\"#350d36\");\r\n\r\n  const changeLook = () => {\r\n     (headerTheme ==\"#350d36\") ? setHeaderTheme(\"black\") : setHeaderTheme(\"#350d36\");\r\n     darkMode();\r\n  };\r\n\r\n  return (\r\n    <Container background = {headerTheme}>\r\n      <CheckBoxWrapper>\r\n        <CheckBox  id=\"checkbox\" type=\"checkbox\" onChange = {changeLook} />\r\n        <CheckBoxLabel title = \"Toggle theme\" htmlFor=\"checkbox\"  />\r\n      </CheckBoxWrapper>\r\n      <Main>\r\n        <AccessTimeIcon />\r\n          <SearchContainer>\r\n            <Search>\r\n              <input type=\"text\" placeholder=\"Search....\" />\r\n            </Search>\r\n          </SearchContainer>\r\n        <HelpOutlineIcon />\r\n      </Main>\r\n      <UserContainer>\r\n        <Name>\r\n          {user.name}\r\n        </Name>\r\n        <UserImage onClick = {signOut}>\r\n          <img src = {user.photo ? user.photo : \"https://i.imgur.com/6VBx3io.png\"} />\r\n        </UserImage>\r\n      </UserContainer>\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  background-color : ${props => props.background ? props.background : \"#350d36\"}; \r\n  color : white;\r\n  display : flex;\r\n  align-items : center ;\r\n  justify-content : center;\r\n  position : relative ;\r\n  box-shadow : 0 1px 0 0 rgb(255 255 255 / 10%);\r\n`;\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  margin-right : 16px ;\r\n  margin-left : 16px;\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  min-width : 400px;\r\n  margin-left : 16px ;\r\n  margin-right : 16px ;\r\n`;\r\n\r\nconst Search = styled.div`\r\n  box-shadow : inset 0 0 0 1px rgb(104 74 104);\r\n  width : 100% ;\r\n  border-radius : 6px ;\r\n  display : flex ;\r\n  align-items : center;\r\n\r\n  input { background-color : transparent ;\r\n  border : none ;\r\n  padding-right : 8px;\r\n  padding-left : 8px ;\r\n  padding-top : 4px ;\r\n  padding-bottom : 4px ;\r\n  color : white;}\r\n\r\n  input:focus {\r\n    outline : none;\r\n  }\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  display : flex;\r\n  align-items : center ;\r\n  padding-right : 16px;\r\n  position : absolute ;\r\n  right : 0 ;\r\n`;\r\n\r\nconst Name = styled.div`\r\nmargin-right : 10px ;`;\r\n\r\nconst UserImage = styled.div`\r\n  width : 28px ;\r\n  height : 28px ;\r\n\r\n  border : 2px solid white ;\r\n  border-radius : 3px ;\r\n\r\n  img {\r\n    width : 100% ;\r\n  }\r\n  cursor : pointer ;\r\n`;\r\n\r\nconst CheckBoxWrapper = styled.div`\r\n  position: absolute;\r\n  left : 10px ;\r\n`;\r\nconst CheckBoxLabel = styled.label`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 42px;\r\n  height: 26px;\r\n  border-radius: 15px ;\r\n  background: #b3b3b3;\r\n  border : 2px solid red;\r\n  cursor: pointer;\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    border-radius: 50%;\r\n    width: 18px;\r\n    height: 18px;\r\n    margin: 3px;\r\n    background: #ffffff;\r\n    box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\r\n    transition: 0.2s;\r\n  }\r\n`;\r\nconst CheckBox = styled.input`\r\n  opacity: 0;\r\n  z-index: 1;\r\n  border-radius: 15px;\r\n  width: 42px;\r\n  height: 26px;\r\n  &:checked + ${CheckBoxLabel} {\r\n    background: #000000;\r\n    &::after {\r\n      content: \"\";\r\n      display: block;\r\n      border-radius: 50%;\r\n      width: 18px;\r\n      height: 18px;\r\n      margin-left: 21px;\r\n      transition: 0.2s;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n\r\n","import React from \"react\";\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nexport const sidebarItemsData = [\r\n  {\r\n    icon : <MessageIcon/> ,\r\n    text : \"Thread\" \r\n  },\r\n  {\r\n    icon : <InboxIcon/> ,\r\n    text : \"All DMs\" \r\n  },\r\n  {\r\n    icon : <DraftsIcon/> ,\r\n    text : \"Mentions & Reactions\" \r\n  },\r\n  {\r\n    icon : <BookmarkBorderIcon/> ,\r\n    text : \"Save Items\" \r\n  },\r\n  {\r\n    icon : <PeopleIcon/> ,\r\n    text : \"People and Groups\" \r\n  },\r\n  {\r\n    icon : <AppsIcon/> ,\r\n    text : \"More\" \r\n  }\r\n]\r\n\r\nexport const channels = [\r\n  {\r\n    name : \"# Channel 1\",\r\n  },\r\n   {\r\n    name : \"# Channel 2\",\r\n  }\r\n]\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport {sidebarItemsData} from '../data/SideBarData';\r\nimport {channels} from '../data/SideBarData'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport db from '../firebase';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nfunction SideBar(props) {\r\n\r\n  const theme = props.sideBarTheme ;\r\n\r\n  const addChannel = () => {\r\n    const promptName = prompt(\"Enter channel name\");\r\n    if(promptName != null){\r\n      db.collection('rooms').add({\r\n        name : promptName \r\n      })\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const goToChannel = (id) => {\r\n    if(id){(\r\n      history.push(`/room/${id}`))\r\n    }};\r\n\r\n\r\n  return (<Container background = {theme}>\r\n      <WorkSpaceContainer>\r\n        <Name>\r\n          CleverProgrammer \r\n        </Name>\r\n          <NewMessage>\r\n           <AddCircleOutlineIcon/>\r\n          </NewMessage>\r\n      </WorkSpaceContainer>\r\n      <MainChannels>\r\n        {\r\n          sidebarItemsData.map(item => (\r\n            <MainChannelItem>\r\n              {item.icon} \r\n              {item.text} \r\n            </MainChannelItem>\r\n          ))\r\n        }\r\n      </MainChannels>\r\n      <ChannelsContainer>\r\n          <NewChannelContainer>\r\n            <div>\r\n              Channels\r\n            </div>\r\n            <AddIcon onClick = {addChannel}/>\r\n          </NewChannelContainer>\r\n          <ChannelsList>\r\n            {\r\n              props.rooms.map(item => (\r\n              <Channel onClick = {() => goToChannel(item.id) } >\r\n                #{item.name}\r\n              </Channel>\r\n              ))\r\n            }\r\n          </ChannelsList>\r\n      </ChannelsContainer>\r\n    </Container>);\r\n}\r\n\r\nexport default SideBar;\r\n\r\nconst Container = styled.div`\r\n    background-color : ${props => props.background} ;\r\n`;\r\n\r\nconst WorkSpaceContainer = styled.div`\r\n  color : white;\r\n  height : 64px;\r\n  display : flex;\r\n  align-items : center ;\r\n  padding-left : 19px ;\r\n  justify-content : space-between ;\r\n`;\r\n\r\nconst Name = styled.div`\r\n`;\r\n\r\nconst NewMessage = styled.div`\r\n  width : 36px ;\r\n  height : 36px ;\r\n  background-color : white ;\r\n  color : #3F0E40 ;\r\n  display : flex ;\r\n  align-items : center ;\r\n  justify-content : center ;\r\n  border-radius : 50% ;\r\n  margin-right : 20px ;\r\n  cursor : pointer ;\r\n`;\r\n\r\nconst MainChannels = styled.div``;\r\n\r\nconst MainChannelItem = styled.div`\r\n  color : rgb(188,171,188);\r\n  display : grid ;\r\n  grid-template-columns : 15% auto ;\r\n  height : 28px ;\r\n  align-items : center ;\r\n  padding-left : 19px ;\r\n  cursor : pointer ;\r\n  :hover {\r\n    background : #350D36 ;\r\n  }\r\n`;\r\n\r\nconst ChannelsContainer = styled.div `\r\n  color : rgb(188,171,188);\r\n  margin-top : 10px ;\r\n`;\r\n\r\nconst NewChannelContainer = styled.div`\r\n  display : flex;\r\n  justify-content : space-between ;\r\n  align-items : center ;\r\n  height : 20px ;\r\n  padding-left : 19px ;\r\n  padding-right : 12px ;\r\n`;\r\n\r\nconst ChannelsList = styled.div`\r\n`; \r\n\r\nconst Channel = styled.div`\r\n  height : 28px ;\r\n  display : flex ;\r\n  align-items : center ;\r\n  padding-left : 19px ;\r\n  cursor : pointer ;\r\n  :hover {\r\n    background : #350D36 ;\r\n  }\r\n`;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Chat from \"./components/Chat\";\r\nimport Login from \"./components/Login.js\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"./components/Header\";\r\nimport SideBar from \"./components/SideBar\";\r\nimport db from './firebase';\r\nimport {useEffect , useState} from \"react\";\r\nimport {auth} from \"./firebase\"\r\n\r\nexport default function App() {\r\n\r\n  const [rooms,setRooms] = useState([]);\r\n  const [user , setUser] = useState(JSON.parse(localStorage.getItem('user'))) ;\r\n  const [sideBarTheme , setSideBarTheme] = useState(\"#3E014B\");\r\n\r\n  const getChannels = () => {\r\n    db.collection('rooms').onSnapshot((snapshot)=> {\r\n      setRooms(snapshot.docs.map((doc)=>{\r\n          return {\r\n              id : doc.id,\r\n              name : doc.data().name\r\n          }}\r\n      ))\r\n  })};\r\n\r\n  useEffect(() => {\r\n    getChannels();\r\n  } , []);\r\n\r\n  const signOut = () => {\r\n    auth.signOut().then(() => {\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n    })\r\n  };\r\n\r\n  const darkMode = () => {\r\n    (sideBarTheme == \"#3E014B\")? setSideBarTheme(\"black\") : setSideBarTheme(\"#3E014B\") ;\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {\r\n          !user ? \r\n          <Login setUser = {setUser}/>\r\n          :\r\n          <Container>\r\n            <Header signOut = {signOut} user = {user} darkMode = {darkMode}/>\r\n            <Main>\r\n              <SideBar rooms={rooms} sideBarTheme = {sideBarTheme} />\r\n              <Switch>\r\n                <Route path=\"/room/:channelId\">\r\n                  <Chat user = {user}/>\r\n                </Route>\r\n                <Route>\r\n                  Select or Create Channel\r\n                </Route>\r\n              </Switch>\r\n            </Main>\r\n          </Container>\r\n        }\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: orange;\r\n  display: grid;\r\n  grid-template-rows: 38px minmax(0,1fr);\r\n`;\r\n\r\nconst Main = styled.div`\r\n  background-color: white;\r\n  display: grid;\r\n  grid-template-columns : 260px auto;\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}